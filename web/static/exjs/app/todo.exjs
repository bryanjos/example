defmodule App.Todo do
  alias JS.App

  def list() do
    Fetch.get("/api/todo").then(fn(response) ->
      response.json().then(fn(todos) ->
        newTree = App.render(todos)

        {rootNode, tree} = Agent.get(:app, fn(x) -> x end)

        patches = DOM.diff(tree, newTree)
        rootNode = DOM.patch(rootNode, patches)

        Agent.update(:app, fn(_) -> {rootNode, newTree} end)
      end)
    end).catch(fn(err) ->
      Logger.debug(err)
    end)
  end

  def add(the_title) do
    Fetch.post("/api/todo", %{
      "headers" => %{
        "Content-type" => "application/json"
      },
      "body" => JSON.stringify(%{"title" => the_title})
    }).then(fn(response) ->
      list()
    end).catch(fn(err) ->
      Logger.debug(err)
    end)
  end

  def remove(id) do
    Fetch.delete("/api/todo/#{id}").then(fn(response) ->
      list()
    end).catch(fn(err) ->
      Logger.debug(err)
    end)
  end

  def update(id, completed) do
    Fetch.put("/api/todo/#{id}", %{
      "headers" => %{
        "Content-type" => "application/json"
      },
      "body" => JSON.stringify(%{ "completed" => completed })
    }).then(fn(response) ->
      list()
    end).catch(fn(err) ->
      Logger.debug(err)
    end)
  end
end
